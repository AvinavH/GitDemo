<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" ignored="0" total="24" passed="18">
  <reporter-output>
  </reporter-output>
  <suite name="Test suite" duration-ms="71782" started-at="2020-08-26T18:46:08 IST" finished-at="2020-08-26T18:47:19 IST">
    <groups>
      <group name="negative">
        <method signature="courseSecondPageTest.setInvalidLanguageTest1()[pri:9, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setInvalidLanguageTest1" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.setInvalidLanguageTest2()[pri:9, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setInvalidLanguageTest2" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.setInvalidLanguageTest3()[pri:9, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setInvalidLanguageTest3" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.setInvalidSkillsTest1()[pri:4, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setInvalidSkillsTest1" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.setInvalidSkillsTest2()[pri:4, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setInvalidSkillsTest2" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.setInvalidSkillsTest3()[pri:4, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setInvalidSkillsTest3" class="com.course.test.courseSecondPageTest"/>
      </group> <!-- negative -->
      <group name="regression">
        <method signature="courseHomePageTest.HomePageValidationTest()[pri:1, instance:com.course.test.courseHomePageTest@5f341870]" name="HomePageValidationTest" class="com.course.test.courseHomePageTest"/>
        <method signature="courseHomePageTest.navigateToSecondPageTest()[pri:6, instance:com.course.test.courseHomePageTest@5f341870]" name="navigateToSecondPageTest" class="com.course.test.courseHomePageTest"/>
        <method signature="courseSecondPageTest.ApplyButtonVisibilityTest()[pri:11, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="ApplyButtonVisibilityTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.LanguageButtonVisibilityTest()[pri:8, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="LanguageButtonVisibilityTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.LevelButtonVisibilityTest()[pri:6, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="LevelButtonVisibilityTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.applyFiltersTest()[pri:12, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="applyFiltersTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.getFirstCourseInfoTest()[pri:13, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getFirstCourseInfoTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.getSecondCourseInfoTest()[pri:14, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getSecondCourseInfoTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.setLevelFilterTest()[pri:7, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setLevelFilterTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.setValidLanguageFilterTest()[pri:10, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setValidLanguageFilterTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.setValidSkillFilterTest()[pri:5, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setValidSkillFilterTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.skillButtonVisibilityTest()[pri:3, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="skillButtonVisibilityTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.verifySecondPageTest()[pri:1, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="verifySecondPageTest" class="com.course.test.courseSecondPageTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="courseHomePageTest.HomePageValidationTest()[pri:1, instance:com.course.test.courseHomePageTest@5f341870]" name="HomePageValidationTest" class="com.course.test.courseHomePageTest"/>
        <method signature="courseHomePageTest.exploreButtonSmokeTest()[pri:5, instance:com.course.test.courseHomePageTest@5f341870]" name="exploreButtonSmokeTest" class="com.course.test.courseHomePageTest"/>
        <method signature="courseHomePageTest.logoVerificationTest()[pri:2, instance:com.course.test.courseHomePageTest@5f341870]" name="logoVerificationTest" class="com.course.test.courseHomePageTest"/>
        <method signature="courseHomePageTest.searchButtonSmokeTest()[pri:4, instance:com.course.test.courseHomePageTest@5f341870]" name="searchButtonSmokeTest" class="com.course.test.courseHomePageTest"/>
        <method signature="courseHomePageTest.searchFieldSmokeTest()[pri:3, instance:com.course.test.courseHomePageTest@5f341870]" name="searchFieldSmokeTest" class="com.course.test.courseHomePageTest"/>
        <method signature="courseSecondPageTest.ApplyButtonVisibilityTest()[pri:11, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="ApplyButtonVisibilityTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.LanguageButtonVisibilityTest()[pri:8, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="LanguageButtonVisibilityTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.LevelButtonVisibilityTest()[pri:6, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="LevelButtonVisibilityTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.skillButtonVisibilityTest()[pri:3, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="skillButtonVisibilityTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.verifyDomainNameTest()[pri:2, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="verifyDomainNameTest" class="com.course.test.courseSecondPageTest"/>
        <method signature="courseSecondPageTest.verifySecondPageTest()[pri:1, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="verifySecondPageTest" class="com.course.test.courseSecondPageTest"/>
      </group> <!-- smoke -->
    </groups>
    <test name="Home Page Test cases" duration-ms="27636" started-at="2020-08-26T18:46:08 IST" finished-at="2020-08-26T18:46:35 IST">
      <class name="com.course.test.courseHomePageTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.course.test.courseHomePageTest@5f341870]" name="setUp" is-config="true" duration-ms="10554" started-at="2020-08-26T18:46:08 IST" finished-at="2020-08-26T18:46:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="HomePageValidationTest()[pri:1, instance:com.course.test.courseHomePageTest@5f341870]" name="HomePageValidationTest" duration-ms="664" started-at="2020-08-26T18:46:18 IST" finished-at="2020-08-26T18:46:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HomePageValidationTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseHomePageTest@5f341870]" name="getResult" is-config="true" duration-ms="17" started-at="2020-08-26T18:46:19 IST" finished-at="2020-08-26T18:46:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HomePageValidationTest status=SUCCESS method=courseHomePageTest.HomePageValidationTest()[pri:1, instance:com.course.test.courseHomePageTest@5f341870] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="logoVerificationTest()[pri:2, instance:com.course.test.courseHomePageTest@5f341870]" name="logoVerificationTest" duration-ms="386" started-at="2020-08-26T18:46:19 IST" finished-at="2020-08-26T18:46:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoVerificationTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseHomePageTest@5f341870]" name="getResult" is-config="true" duration-ms="0" started-at="2020-08-26T18:46:19 IST" finished-at="2020-08-26T18:46:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoVerificationTest status=SUCCESS method=courseHomePageTest.logoVerificationTest()[pri:2, instance:com.course.test.courseHomePageTest@5f341870] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="searchFieldSmokeTest()[pri:3, instance:com.course.test.courseHomePageTest@5f341870]" name="searchFieldSmokeTest" duration-ms="163" started-at="2020-08-26T18:46:19 IST" finished-at="2020-08-26T18:46:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchFieldSmokeTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseHomePageTest@5f341870]" name="getResult" is-config="true" duration-ms="1" started-at="2020-08-26T18:46:19 IST" finished-at="2020-08-26T18:46:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchFieldSmokeTest status=SUCCESS method=courseHomePageTest.searchFieldSmokeTest()[pri:3, instance:com.course.test.courseHomePageTest@5f341870] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="searchButtonSmokeTest()[pri:4, instance:com.course.test.courseHomePageTest@5f341870]" name="searchButtonSmokeTest" duration-ms="56" started-at="2020-08-26T18:46:19 IST" finished-at="2020-08-26T18:46:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchButtonSmokeTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseHomePageTest@5f341870]" name="getResult" is-config="true" duration-ms="1" started-at="2020-08-26T18:46:19 IST" finished-at="2020-08-26T18:46:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchButtonSmokeTest status=SUCCESS method=courseHomePageTest.searchButtonSmokeTest()[pri:4, instance:com.course.test.courseHomePageTest@5f341870] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="exploreButtonSmokeTest()[pri:5, instance:com.course.test.courseHomePageTest@5f341870]" name="exploreButtonSmokeTest" duration-ms="55" started-at="2020-08-26T18:46:19 IST" finished-at="2020-08-26T18:46:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exploreButtonSmokeTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseHomePageTest@5f341870]" name="getResult" is-config="true" duration-ms="0" started-at="2020-08-26T18:46:19 IST" finished-at="2020-08-26T18:46:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exploreButtonSmokeTest status=SUCCESS method=courseHomePageTest.exploreButtonSmokeTest()[pri:5, instance:com.course.test.courseHomePageTest@5f341870] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="navigateToSecondPageTest()[pri:6, instance:com.course.test.courseHomePageTest@5f341870]" name="navigateToSecondPageTest" duration-ms="9789" started-at="2020-08-26T18:46:19 IST" finished-at="2020-08-26T18:46:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToSecondPageTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseHomePageTest@5f341870]" name="getResult" is-config="true" duration-ms="1" started-at="2020-08-26T18:46:29 IST" finished-at="2020-08-26T18:46:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToSecondPageTest status=SUCCESS method=courseHomePageTest.navigateToSecondPageTest()[pri:6, instance:com.course.test.courseHomePageTest@5f341870] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.course.test.courseHomePageTest@5f341870]" name="tearDown" is-config="true" duration-ms="5872" started-at="2020-08-26T18:46:29 IST" finished-at="2020-08-26T18:46:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.course.test.courseHomePageTest -->
    </test> <!-- Home Page Test cases -->
    <test name="SecondPage Test Cases" duration-ms="44074" started-at="2020-08-26T18:46:35 IST" finished-at="2020-08-26T18:47:19 IST">
      <class name="com.course.test.courseSecondPageTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setUp" is-config="true" duration-ms="17921" started-at="2020-08-26T18:46:35 IST" finished-at="2020-08-26T18:46:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifySecondPageTest()[pri:1, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="verifySecondPageTest" duration-ms="327" started-at="2020-08-26T18:46:53 IST" finished-at="2020-08-26T18:46:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySecondPageTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="0" started-at="2020-08-26T18:46:53 IST" finished-at="2020-08-26T18:46:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySecondPageTest status=SUCCESS method=courseSecondPageTest.verifySecondPageTest()[pri:1, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="verifyDomainNameTest()[pri:2, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="verifyDomainNameTest" duration-ms="228" started-at="2020-08-26T18:46:53 IST" finished-at="2020-08-26T18:46:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDomainNameTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="1" started-at="2020-08-26T18:46:54 IST" finished-at="2020-08-26T18:46:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDomainNameTest status=SUCCESS method=courseSecondPageTest.verifyDomainNameTest()[pri:2, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="skillButtonVisibilityTest()[pri:3, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="skillButtonVisibilityTest" duration-ms="2711" started-at="2020-08-26T18:46:54 IST" finished-at="2020-08-26T18:46:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skillButtonVisibilityTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="1" started-at="2020-08-26T18:46:56 IST" finished-at="2020-08-26T18:46:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skillButtonVisibilityTest status=SUCCESS method=courseSecondPageTest.skillButtonVisibilityTest()[pri:3, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="setInvalidSkillsTest1()[pri:4, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setInvalidSkillsTest1" duration-ms="7931" started-at="2020-08-26T18:46:56 IST" finished-at="2020-08-26T18:47:04 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
No such courses available did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
No such courses available did not expect to find [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at com.course.test.courseSecondPageTest.setInvalidSkillsTest1(courseSecondPageTest.java:73)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInvalidSkillsTest1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="933" started-at="2020-08-26T18:47:04 IST" finished-at="2020-08-26T18:47:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setInvalidSkillsTest1 status=FAILURE method=courseSecondPageTest.setInvalidSkillsTest1()[pri:4, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="setInvalidSkillsTest2()[pri:4, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setInvalidSkillsTest2" duration-ms="626" started-at="2020-08-26T18:47:05 IST" finished-at="2020-08-26T18:47:06 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
No such courses available did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
No such courses available did not expect to find [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at com.course.test.courseSecondPageTest.setInvalidSkillsTest2(courseSecondPageTest.java:82)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInvalidSkillsTest2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="832" started-at="2020-08-26T18:47:06 IST" finished-at="2020-08-26T18:47:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setInvalidSkillsTest2 status=FAILURE method=courseSecondPageTest.setInvalidSkillsTest2()[pri:4, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="setInvalidSkillsTest3()[pri:4, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setInvalidSkillsTest3" duration-ms="654" started-at="2020-08-26T18:47:07 IST" finished-at="2020-08-26T18:47:07 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
No such courses available did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
No such courses available did not expect to find [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at com.course.test.courseSecondPageTest.setInvalidSkillsTest3(courseSecondPageTest.java:91)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInvalidSkillsTest3 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="637" started-at="2020-08-26T18:47:07 IST" finished-at="2020-08-26T18:47:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setInvalidSkillsTest3 status=FAILURE method=courseSecondPageTest.setInvalidSkillsTest3()[pri:4, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setValidSkillFilterTest()[pri:5, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setValidSkillFilterTest" duration-ms="1479" started-at="2020-08-26T18:47:08 IST" finished-at="2020-08-26T18:47:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setValidSkillFilterTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="1" started-at="2020-08-26T18:47:10 IST" finished-at="2020-08-26T18:47:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setValidSkillFilterTest status=SUCCESS method=courseSecondPageTest.setValidSkillFilterTest()[pri:5, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="LevelButtonVisibilityTest()[pri:6, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="LevelButtonVisibilityTest" duration-ms="47" started-at="2020-08-26T18:47:10 IST" finished-at="2020-08-26T18:47:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LevelButtonVisibilityTest -->
        <test-method status="PASS" signature="setLevelFilterTest()[pri:7, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setLevelFilterTest" duration-ms="654" started-at="2020-08-26T18:47:10 IST" finished-at="2020-08-26T18:47:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setLevelFilterTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="0" started-at="2020-08-26T18:47:10 IST" finished-at="2020-08-26T18:47:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LevelButtonVisibilityTest status=SUCCESS method=courseSecondPageTest.LevelButtonVisibilityTest()[pri:6, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="1" started-at="2020-08-26T18:47:10 IST" finished-at="2020-08-26T18:47:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setLevelFilterTest status=SUCCESS method=courseSecondPageTest.setLevelFilterTest()[pri:7, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="LanguageButtonVisibilityTest()[pri:8, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="LanguageButtonVisibilityTest" duration-ms="42" started-at="2020-08-26T18:47:10 IST" finished-at="2020-08-26T18:47:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LanguageButtonVisibilityTest -->
        <test-method status="FAIL" signature="setInvalidLanguageTest1()[pri:9, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setInvalidLanguageTest1" duration-ms="909" started-at="2020-08-26T18:47:10 IST" finished-at="2020-08-26T18:47:11 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
No such Languages available did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
No such Languages available did not expect to find [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at com.course.test.courseSecondPageTest.setInvalidLanguageTest1(courseSecondPageTest.java:119)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInvalidLanguageTest1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="0" started-at="2020-08-26T18:47:10 IST" finished-at="2020-08-26T18:47:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LanguageButtonVisibilityTest status=SUCCESS method=courseSecondPageTest.LanguageButtonVisibilityTest()[pri:8, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="777" started-at="2020-08-26T18:47:11 IST" finished-at="2020-08-26T18:47:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setInvalidLanguageTest1 status=FAILURE method=courseSecondPageTest.setInvalidLanguageTest1()[pri:9, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="setInvalidLanguageTest2()[pri:9, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setInvalidLanguageTest2" duration-ms="544" started-at="2020-08-26T18:47:12 IST" finished-at="2020-08-26T18:47:12 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
No such Languages available did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
No such Languages available did not expect to find [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at com.course.test.courseSecondPageTest.setInvalidLanguageTest2(courseSecondPageTest.java:128)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInvalidLanguageTest2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="697" started-at="2020-08-26T18:47:12 IST" finished-at="2020-08-26T18:47:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setInvalidLanguageTest2 status=FAILURE method=courseSecondPageTest.setInvalidLanguageTest2()[pri:9, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="setInvalidLanguageTest3()[pri:9, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setInvalidLanguageTest3" duration-ms="510" started-at="2020-08-26T18:47:13 IST" finished-at="2020-08-26T18:47:14 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
No such Languages available did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
No such Languages available did not expect to find [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at com.course.test.courseSecondPageTest.setInvalidLanguageTest3(courseSecondPageTest.java:137)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setInvalidLanguageTest3 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="610" started-at="2020-08-26T18:47:14 IST" finished-at="2020-08-26T18:47:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setInvalidLanguageTest3 status=FAILURE method=courseSecondPageTest.setInvalidLanguageTest3()[pri:9, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setValidLanguageFilterTest()[pri:10, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="setValidLanguageFilterTest" duration-ms="1041" started-at="2020-08-26T18:47:14 IST" finished-at="2020-08-26T18:47:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setValidLanguageFilterTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="1" started-at="2020-08-26T18:47:15 IST" finished-at="2020-08-26T18:47:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=setValidLanguageFilterTest status=SUCCESS method=courseSecondPageTest.setValidLanguageFilterTest()[pri:10, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="ApplyButtonVisibilityTest()[pri:11, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="ApplyButtonVisibilityTest" duration-ms="104" started-at="2020-08-26T18:47:15 IST" finished-at="2020-08-26T18:47:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApplyButtonVisibilityTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="0" started-at="2020-08-26T18:47:15 IST" finished-at="2020-08-26T18:47:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ApplyButtonVisibilityTest status=SUCCESS method=courseSecondPageTest.ApplyButtonVisibilityTest()[pri:11, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="applyFiltersTest()[pri:12, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="applyFiltersTest" duration-ms="1764" started-at="2020-08-26T18:47:15 IST" finished-at="2020-08-26T18:47:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applyFiltersTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="2" started-at="2020-08-26T18:47:17 IST" finished-at="2020-08-26T18:47:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applyFiltersTest status=SUCCESS method=courseSecondPageTest.applyFiltersTest()[pri:12, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="getFirstCourseInfoTest()[pri:13, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getFirstCourseInfoTest" duration-ms="1084" started-at="2020-08-26T18:47:17 IST" finished-at="2020-08-26T18:47:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFirstCourseInfoTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="1" started-at="2020-08-26T18:47:18 IST" finished-at="2020-08-26T18:47:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getFirstCourseInfoTest status=SUCCESS method=courseSecondPageTest.getFirstCourseInfoTest()[pri:13, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="getSecondCourseInfoTest()[pri:14, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getSecondCourseInfoTest" duration-ms="693" started-at="2020-08-26T18:47:18 IST" finished-at="2020-08-26T18:47:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSecondCourseInfoTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="getResult" is-config="true" duration-ms="1" started-at="2020-08-26T18:47:19 IST" finished-at="2020-08-26T18:47:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getSecondCourseInfoTest status=SUCCESS method=courseSecondPageTest.getSecondCourseInfoTest()[pri:14, instance:com.course.test.courseSecondPageTest@3159c4b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.course.test.courseSecondPageTest@3159c4b8]" name="tearDown" is-config="true" duration-ms="286" started-at="2020-08-26T18:47:19 IST" finished-at="2020-08-26T18:47:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.course.test.courseSecondPageTest -->
    </test> <!-- SecondPage Test Cases -->
  </suite> <!-- Test suite -->
</testng-results>
